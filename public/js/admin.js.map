{"version":3,"sources":["admin.js"],"names":[],"mappingsfile":"admin.js","sourcesContent":["(function() {\n  angular.module('wo', ['angularMoment'])\n    .run(function(amMoment) {\n      amMoment.changeLocale('de-at');\n    })\n    .filter('as', function($parse){\n      return function(value, context, path){\n        return $parse(path).assign(context, value);\n      }\n    })\n    .controller('AdminController', function($http) {\n      var vm = this;\n\n      vm.pois = [], vm.users = [], vm.roles = [], vm.selection = [];\n      vm.sortType     = 'created_at'; // set the default sort type\n      vm.sortReverse  = true;  // set the default sort order\n      vm.searchLimit = \"25\";\n      vm.updatePoi = updatePoi;\n      vm.selectAll = selectAll;\n      vm.isSelected = isSelected;\n      vm.toggleSelected = toggleSelected;\n      vm.bulkPublic = bulkPublic;\n      vm.deleteItems = deleteItems;\n      vm.hasRole = hasRole;\n      vm.setUserRole = setUserRole;\n\n      activate();\n\n      function activate() {\n        $http.get('/api/admin/pois').then(function success(response) {\n          vm.pois = response.data;\n        }, function error(response) {\n\n        });\n        $http.get('/api/admin/users').then(function success(response) {\n          vm.users = response.data;\n        }, function error(response) {\n\n        });\n        $http.get('/api/admin/roles').then(function success(response) {\n          vm.roles = response.data;\n        }, function error(response) {\n\n        });\n      }\n\n      function updatePoi(item) {\n        $http.put('/api/admin/pois/' + item.id, item).then(function(response) {\n          Materialize.toast(item.title + \" gespeichert!\", 2000);\n        }, function(response) {\n\n        });\n      }\n\n      function isSelected(item) {\n        if (vm.selection.indexOf(item) != -1) {\n          return true;\n        }\n        return false;\n      }\n\n      function toggleSelected(item) {\n        console.log(isSelected(item));\n        if (isSelected(item)) {\n          vm.selection.splice(vm.selection.indexOf(item), 1);\n        } else {\n          vm.selection.push(item);\n        }\n      }\n\n      function selectAll(items) {\n        angular.forEach(items, function(item) {\n          //if (item.type_id == type_id) {\n            toggleSelected(item);\n          //}\n\n        });\n      }\n\n      function bulkPublic(isPublic) {\n        var ids = [];\n        angular.forEach(vm.selection, function(item) {\n          ids.push(item.id);\n        });\n        $http.put('/api/admin/pois/public', {\n          is_public: isPublic,\n          ids: ids\n        }).then(function(response) {\n          Materialize.toast(ids.length + \" Einträge gespeichert!\", 2000);\n          angular.forEach(vm.selection, function(item) {\n            item.is_public = isPublic ? 1 : 0;\n          })\n        });\n      }\n\n      function deleteItems() {\n        var ids = [];\n        angular.forEach(vm.selection, function(item) {\n          ids.push(item.id);\n        });\n        $http.patch('/api/admin/pois', {\n          ids: ids\n        }).then(function(response) {\n          Materialize.toast(ids.length + \" Einträge gelöscht!\", 2000);\n          angular.forEach(vm.selection, function(item, key) {\n            //vm.selection.splice(key,1 );\n            vm.pois.splice(vm.pois.indexOf(item), 1);\n          })\n        });\n      }\n\n      function hasRole(id, user) {\n        var found = false;\n        angular.forEach(user.roles, function(role) {\n          if (role.id == id) {\n            found = true;\n          }\n        });\n        return found;\n      }\n\n      function setUserRole(id, user) {\n        $http.put('/api/admin/users/' + user.id + '/role', {\n          roleId: id\n        }).then(function(response) {\n          Materialize.toast(user.first_name + \" \" + user.last_name + \" ist nun \" + response.data.name, 2000);\n        });\n      }\n    })\n})();\n"],"sourceRoot":"/source/"}